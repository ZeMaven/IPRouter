@model MomoSwitchPortal.Models.ViewModels.Home.DashboardData
@{
    ViewData["Title"] = "Home page";
    ViewData["Dashboard"] = "active bg-gradient-warning";
}
<style>
    .card .card-footer {
        display: flex;
        justify-content: space-between;
    }
</style>
<div class="container-fluid ">
    <div class="row">
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
            <div class="card">
                <div class="card-header p-3 pt-2">
                    <div class="icon icon-lg icon-shape bg-gradient-dark shadow-dark text-center border-radius-xl mt-n4 position-absolute">
                        <i class="material-icons opacity-10">
                            account_balance_wallet
                        </i>
                    </div>
                    <div class="text-end pt-1" style="padding-top: 1rem !important;">
                        <p class="text-sm mb-0 text-capitalize">Today's Incoming</p>
                        <h4 class="mb-0" id="totalInc">&#8358;@Model.TotalIncoming</h4>
                    </div>
                </div>
                <hr class="dark horizontal my-0">
                <div class="card-footer p-3">
                    <p class="mb-0">Total count: <span id="totalIncCount" class="text-success text-sm font-weight-bolder">@Model.TotalIncomingCount</span></p>
                    @* <p class="mb-0"><span class="text-success text-sm font-weight-bolder">@Model.TotalIncomingPercentage%</span></p> *@
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
            <div class="card">
                <div class="card-header p-3 pt-2">
                    <div class="icon icon-lg icon-shape bg-gradient-info shadow-info text-center border-radius-xl mt-n4 position-absolute">
                        <i class="material-icons opacity-10">
                            account_balance_wallet
                        </i>
                    </div>
                    <div class="text-end pt-1" style="padding-top: 1rem !important;">
                        <p class="text-sm mb-0 text-capitalize">Today's Outgoing</p>
                        <h4 class="mb-0" id="totalOut">&#8358;@Model.TotalOutGoing</h4>
                    </div>
                </div>
                <hr class="dark horizontal my-0">
                <div class="card-footer p-3">
                    <p class="mb-0">Total count: <span class="text-success text-sm font-weight-bolder" id="totalOutCount">@Model.TotalOutGoingCount</span></p>
                    @* <p class="mb-0"><span class="text-success text-sm font-weight-bolder">@Model.TotalOutGoingPercentage%</span></p> *@
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
            <div class="card">
                <div class="card-header p-3 pt-2">
                    <div class="icon icon-lg icon-shape bg-gradient-success shadow-success text-center border-radius-xl mt-n4 position-absolute">
                        <i class="material-icons opacity-10">
                            account_balance_wallet
                        </i>
                    </div>
                    <div class="text-end pt-1" style="padding-top: 1rem !important;">
                        <p class="text-sm mb-0 text-capitalize">Today's Successful</p>
                        <h4 class="mb-0" id="totalSuccess">&#8358;@Model.TotalSuccessful</h4>
                    </div>
                </div>
                <hr class="dark horizontal my-0">
                <div class="card-footer p-3">
                    <p class="mb-0">Total count: <span class="text-success text-sm font-weight-bolder" id="totalSuccessCount">@Model.TotalSuccessfulCount</span></p>
                    <p class="mb-0"><span class="text-success text-sm font-weight-bolder" style="font-size:11px !important;" id="totalSuccessPerc">@Model.TotalSuccessfulPercentage%</span></p>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6">
            <div class="card">
                <div class="card-header p-3 pt-2">
                    <div class="icon icon-lg icon-shape bg-gradient-primary shadow-primary text-center border-radius-xl mt-n4 position-absolute">
                        <i class="material-icons opacity-10">
                            account_balance_wallet
                        </i>
                    </div>
                    <div class="text-end pt-1" style="padding-top: 1rem !important;">
                        <p class="text-sm mb-0 text-capitalize">Today's' Failed</p>
                        <h4 class="mb-0" id="totalFail">&#8358;@Model.TotalFailed</h4>
                    </div>
                </div>
                <hr class="dark horizontal my-0">
                <div class="card-footer p-3">
                    <p class="mb-0">Total count: <span class="text-success text-sm font-weight-bolder" id="totalFailCount">@Model.TotalFailedCount</span></p>
                    <p class="mb-0"><span class="text-success text-sm font-weight-bolder" style="font-size:11px !important;" id="totalFailPerc">@Model.TotalFailedPercentage%</span></p>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-lg-4 col-md-6 mt-4 mb-4">
            <div class="card z-index-2 ">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent">
                    <div class="bg-gradient-info shadow-info border-radius-lg py-3 pe-1">
                        <div class="chart">
                            <canvas id="chart-bars" class="chart-canvas" height="170"></canvas>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <h6 class="mb-0 ">Successful Transactions</h6>
                    <p class="text-sm ">This Week Transactions Chart</p>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6 mt-4 mb-4">
            <div class="card z-index-2  ">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent">
                    <div class="bg-gradient-success shadow-success border-radius-lg py-3 pe-1">
                        <div class="chart">
                            <canvas id="chart-line" class="chart-canvas" height="170"></canvas>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <h6 class="mb-0 ">Successful Transactions</h6>
                    <p class="text-sm ">This Month Success Trend</p>
                </div>
            </div>
        </div>
        <div class="col-lg-4 mt-4 mb-3">
            <div class="card z-index-2 ">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent">
                    <div class="bg-gradient-dark shadow-dark border-radius-lg py-3 pe-1">
                        <div class="chart">
                            <canvas id="chart-line-tasks" class="chart-canvas" height="170"></canvas>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <h6 class="mb-0 ">Failed transactions</h6>
                    <p class="text-sm ">This Month Failure Trend</p>
                </div>
            </div>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-lg-8 col-md-6 mb-md-0 mb-4">
            <div class="card">
                <div class="card-header pb-0">
                    <div class="row">
                        <div class="col-lg-6 col-7">
                            <h6>Transactions</h6>
                        </div>
                        <div class="col-lg-6 col-5 my-auto text-end">
                            <a href="~/transactions" style="color: #344767;" type="button" class="btn btn-link  btn-sm">View All</a>
                        </div>
                    </div>
                </div>
                <div class="card-body px-0 pb-2">
                    <div class="table-responsive">
                        <table class="table align-items-center mb-0" id="transactions-table">
                            <thead>
                                <tr class="align-middle text-center">
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Transaction Id</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Source</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Beneficiary</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Response Code</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    if (Model != null)
                                    {
                                        if (Model.RecentTransactions.Count > 0)
                                        {
                                            foreach (var Item in Model.RecentTransactions)
                                            {
                                                <tr>
                                                    <td class="align-middle text-center text-sm">
                                                        <span class="text-xs font-weight-bold">@Item.TransactionId</span>
                                                    </td>
                                                    <td class="align-middle text-center text-sm">
                                                        <span class="text-xs font-weight-bold"> @Item.SourceBankName</span>
                                                    </td>
                                                    <td class="align-middle text-center text-sm">
                                                        <span class="text-xs font-weight-bold"> @Item.BenefBankName</span>
                                                    </td>
                                                    <td class="align-middle text-center text-sm">
                                                        <div class="progress-info">
                                                            <div class="progress-percentage">
                                                                <span class="text-xs font-weight-bold"> @Item.ResponseCode</span>
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6">
            <div class="card h-100">
                <div class="card-header pb-0">
                    <h6>Overview</h6>
                </div>
                <div class="card-body p-3">
                    <div class="timeline timeline-one-side">
                        <div class="timeline-block mb-3">
                            <span class="timeline-step">
                                <i class="material-icons text-success text-gradient">people</i>
                            </span>
                            <div class="timeline-content">
                                <h6 class="text-dark text-sm font-weight-bold mb-0" id="totalUsers"> @Model.TotalUsers Users</h6>
                            </div>
                        </div>
                        <div class="timeline-block mb-3">
                            <span class="timeline-step">
                                <i class="material-icons text-info text-gradient">toggle_off</i>
                            </span>
                            <div class="timeline-content">
                                <h6 class="text-dark text-sm font-weight-bold mb-0" id="totalSwitches"> @Model.TotalSwitches Switches</h6>
                            </div>
                        </div>
                        <div class="timeline-block mb-3">
                            <span class="timeline-step">
                                <i class="material-icons text-warning text-gradient">swap_horiz</i>
                            </span>
                            <div class="timeline-content">
                                <h6 class="text-dark text-sm font-weight-bold mb-0" id="totalTransactions">@Model.TotalTransactions Transactions</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {

    <script>
        var chartBars1, chartBars2, chartBars3;
        var ctx = document.getElementById("chart-bars").getContext("2d");

        chartBars1 = new Chart(ctx, {
            type: "bar",
            data: {
                labels: ["M", "T", "W", "T", "F", "S", "S"],
                datasets: [{
                    label: "Transactions",
                    tension: 0.4,
                    borderWidth: 0,
                    borderRadius: 4,
                    borderSkipped: false,
                    backgroundColor: "rgba(255, 255, 255, .8)",
                    data: [@Model.DailyTrend.Monday, @Model.DailyTrend.Tuesday, @Model.DailyTrend.Wednesday, @Model.DailyTrend.Thursday, @Model.DailyTrend.Friday, @Model.DailyTrend.Saturday, @Model.DailyTrend.Sunday],
                    maxBarThickness: 6
                },],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: true,
                            drawOnChartArea: true,
                            drawTicks: false,
                            borderDash: [5, 5],
                            color: 'rgba(255, 255, 255, .2)'
                        },
                        ticks: {
                            suggestedMin: 0,
                            suggestedMax: 500,
                            beginAtZero: true,
                            padding: 10,
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                            color: "#fff"
                        },
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: true,
                            drawOnChartArea: true,
                            drawTicks: false,
                            borderDash: [5, 5],
                            color: 'rgba(255, 255, 255, .2)'
                        },
                        ticks: {
                            display: true,
                            color: '#f8f9fa',
                            padding: 10,
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                },
            },
        });


        var ctx2 = document.getElementById("chart-line").getContext("2d");

        chartBars2 = new Chart(ctx2, {
            type: "line",
            data: {
                labels: @Html.Raw(Json.Serialize(Model.SuccessfulWeeklyTrend.Weeks)),
                datasets: [{
                    label: "Transactions",
                    tension: 0,
                    borderWidth: 0,
                    pointRadius: 5,
                    pointBackgroundColor: "rgba(255, 255, 255, .8)",
                    pointBorderColor: "transparent",
                    borderColor: "rgba(255, 255, 255, .8)",
                    borderColor: "rgba(255, 255, 255, .8)",
                    borderWidth: 6,
                    backgroundColor: "transparent",
                    fill: true,
                    data: @Html.Raw(Json.Serialize(Model.SuccessfulWeeklyTrend.WeeksCount)),
                    maxBarThickness: 6

                }],
            },
            options: {
                responsive: true,
                spanGaps: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: true,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: true,
                            drawOnChartArea: true,
                            drawTicks: false,
                            borderDash: [5, 5],
                            color: 'rgba(255, 255, 255, .2)'
                        },
                        ticks: {
                            display: true,
                            color: '#f8f9fa',
                            padding: 10,
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                            borderDash: [5, 5]
                        },
                        ticks: {
                            display: true,
                            color: '#f8f9fa',
                            padding: 10,
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                },
            },
        });

        var ctx3 = document.getElementById("chart-line-tasks").getContext("2d");

        chartBars3 = new Chart(ctx3, {
            type: "line",
            data: {
                labels: @Html.Raw(Json.Serialize(Model.FailedWeeklyTrend.Weeks)),
                datasets: [{
                    label: "Transactions",
                    tension: 0,
                    borderWidth: 0,
                    pointRadius: 5,
                    pointBackgroundColor: "rgba(255, 255, 255, .8)",
                    pointBorderColor: "transparent",
                    borderColor: "rgba(255, 255, 255, .8)",
                    borderWidth: 4,
                    backgroundColor: "transparent",
                    fill: true,
                    data: @Html.Raw(Json.Serialize(Model.FailedWeeklyTrend.WeeksCount)),
                    maxBarThickness: 6

                }],
            },
            options: {
                responsive: true,
                spanGaps: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: true,
                            drawOnChartArea: true,
                            drawTicks: false,
                            borderDash: [5, 5],
                            color: 'rgba(255, 255, 255, .2)'
                        },
                        ticks: {
                            display: true,
                            padding: 10,
                            color: '#f8f9fa',
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                            borderDash: [5, 5]
                        },
                        ticks: {
                            display: true,
                            color: '#f8f9fa',
                            padding: 10,
                            font: {
                                size: 14,
                                weight: 300,
                                family: "Roboto",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                },
            },
        });

    </script>

    <script>
        function updateCharts(response) {
            //Update graph
            if (chartBars1) chartBars1.destroy();
            if (chartBars2) chartBars2.destroy();
            if (chartBars3) chartBars3.destroy();

            ctx = document.getElementById("chart-bars").getContext("2d");

            new Chart(ctx, {
                type: "bar",
                data: {
                    labels: ["M", "T", "W", "T", "F", "S", "S"],
                    datasets: [{
                        label: "Transactions",
                        tension: 0.4,
                        borderWidth: 0,
                        borderRadius: 4,
                        borderSkipped: false,
                        backgroundColor: "rgba(255, 255, 255, .8)",
                        data: [response.dailyTrend.monday, response.dailyTrend.tuesday, response.dailyTrend.wednesday, response.dailyTrend.thursday, response.dailyTrend.friday, response.dailyTrend.saturday, response.dailyTrend.sunday],
                        maxBarThickness: 6
                    },],
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false,
                        }
                    },
                    interaction: {
                        intersect: false,
                        mode: 'index',
                    },
                    scales: {
                        y: {
                            grid: {
                                drawBorder: false,
                                display: true,
                                drawOnChartArea: true,
                                drawTicks: false,
                                borderDash: [5, 5],
                                color: 'rgba(255, 255, 255, .2)'
                            },
                            ticks: {
                                suggestedMin: 0,
                                suggestedMax: 500,
                                beginAtZero: true,
                                padding: 10,
                                font: {
                                    size: 14,
                                    weight: 300,
                                    family: "Roboto",
                                    style: 'normal',
                                    lineHeight: 2
                                },
                                color: "#fff"
                            },
                        },
                        x: {
                            grid: {
                                drawBorder: false,
                                display: true,
                                drawOnChartArea: true,
                                drawTicks: false,
                                borderDash: [5, 5],
                                color: 'rgba(255, 255, 255, .2)'
                            },
                            ticks: {
                                display: true,
                                color: '#f8f9fa',
                                padding: 10,
                                font: {
                                    size: 14,
                                    weight: 300,
                                    family: "Roboto",
                                    style: 'normal',
                                    lineHeight: 2
                                },
                            }
                        },
                    },
                },
            });


            var ctx2 = document.getElementById("chart-line").getContext("2d");

            new Chart(ctx2, {
                type: "line",
                data: {
                    labels: response.successfulWeeklyTrend.weeks,
                    datasets: [{
                        label: "Transactions",
                        tension: 0,
                        borderWidth: 0,
                        pointRadius: 5,
                        pointBackgroundColor: "rgba(255, 255, 255, .8)",
                        pointBorderColor: "transparent",
                        borderColor: "rgba(255, 255, 255, .8)",
                        borderColor: "rgba(255, 255, 255, .8)",
                        borderWidth: 6,
                        backgroundColor: "transparent",
                        fill: true,
                        data: response.successfulWeeklyTrend.weeksCount,
                        maxBarThickness: 6

                    }],
                },
                options: {
                    responsive: true,
                    spanGaps: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false,
                        }
                    },
                    interaction: {
                        intersect: true,
                        mode: 'index',
                    },
                    scales: {
                        y: {
                            grid: {
                                drawBorder: false,
                                display: true,
                                drawOnChartArea: true,
                                drawTicks: false,
                                borderDash: [5, 5],
                                color: 'rgba(255, 255, 255, .2)'
                            },
                            ticks: {
                                display: true,
                                color: '#f8f9fa',
                                padding: 10,
                                font: {
                                    size: 14,
                                    weight: 300,
                                    family: "Roboto",
                                    style: 'normal',
                                    lineHeight: 2
                                },
                            }
                        },
                        x: {
                            grid: {
                                drawBorder: false,
                                display: false,
                                drawOnChartArea: false,
                                drawTicks: false,
                                borderDash: [5, 5]
                            },
                            ticks: {
                                display: true,
                                color: '#f8f9fa',
                                padding: 10,
                                font: {
                                    size: 14,
                                    weight: 300,
                                    family: "Roboto",
                                    style: 'normal',
                                    lineHeight: 2
                                },
                            }
                        },
                    },
                },
            });

            var ctx3 = document.getElementById("chart-line-tasks").getContext("2d");

            new Chart(ctx3, {
                type: "line",
                data: {
                    labels: response.failedWeeklyTrend.weeks,
                    datasets: [{
                        label: "Transactions",
                        tension: 0,
                        borderWidth: 0,
                        pointRadius: 5,
                        pointBackgroundColor: "rgba(255, 255, 255, .8)",
                        pointBorderColor: "transparent",
                        borderColor: "rgba(255, 255, 255, .8)",
                        borderWidth: 4,
                        backgroundColor: "transparent",
                        fill: true,
                        data: response.failedWeeklyTrend.weeksCount,
                        maxBarThickness: 6

                    }],
                },
                options: {
                    responsive: true,
                    spanGaps: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false,
                        }
                    },
                    interaction: {
                        intersect: false,
                        mode: 'index',
                    },
                    scales: {
                        y: {
                            grid: {
                                drawBorder: false,
                                display: true,
                                drawOnChartArea: true,
                                drawTicks: false,
                                borderDash: [5, 5],
                                color: 'rgba(255, 255, 255, .2)'
                            },
                            ticks: {
                                display: true,
                                padding: 10,
                                color: '#f8f9fa',
                                font: {
                                    size: 14,
                                    weight: 300,
                                    family: "Roboto",
                                    style: 'normal',
                                    lineHeight: 2
                                },
                            }
                        },
                        x: {
                            grid: {
                                drawBorder: false,
                                display: false,
                                drawOnChartArea: false,
                                drawTicks: false,
                                borderDash: [5, 5]
                            },
                            ticks: {
                                display: true,
                                color: '#f8f9fa',
                                padding: 10,
                                font: {
                                    size: 14,
                                    weight: 300,
                                    family: "Roboto",
                                    style: 'normal',
                                    lineHeight: 2
                                },
                            }
                        },
                    },
                },
            });
        }
        function updateTable(data) {
            var $tbody = $('#transactions-table tbody');
            $tbody.empty(); // Clear existing rows

            // Iterate over the data and append rows
            data.forEach(function (transaction) {
                var row = `<tr>
                                <td class="align-middle text-center text-sm">
                                    <span class="text-xs font-weight-bold">${transaction.transactionId}</span>
                                </td>
                                <td class="align-middle text-center text-sm">
                                    <span class="text-xs font-weight-bold"> ${transaction.sourceBankName}</span>
                                </td>
                                <td class="align-middle text-center text-sm">
                                    <span class="text-xs font-weight-bold"> ${transaction.BenefBankName}</span>
                                </td>
                                <td class="align-middle text-center text-sm">
                                    <div class="progress-info">
                                        <div class="progress-percentage">
                                        <span class="text-xs font-weight-bold"> ${transaction.ResponseCode}</span>
                                        </div>
                                    </div>
                                </td>
                         </tr>`;
                $tbody.append(row);
            });
        }
    </script>
    <script>
        $(document).ready(function () {
            $.ajax({
                url: '/home/GetDashboardData',
                type: 'GET',
                success: function (response) {
                    // This function is called if the request succeeds (status code 200-299)
                    console.log('Success:', response);
                    $('#totalIncCount').text(response.totalIncomingCount);
                    $('#totalInc').text(response.totalIncoming);
                    $('#totalOut').text(response.totalOutGoing);
                    $('#totalOutCount').text(response.totalOutGoing);
                    $('#totalSuccess').text(response.totalSuccessful);
                    $('#totalSuccessPerc').text(response.totalSuccessfulPercentage);
                    $('#totalSuccessCount').text(response.totalSuccessfulCount);
                    $('#totalFail').text(response.totalFailed);
                    $('#totalFailCount').text(response.totalFailedCount);
                    $('#totalFailPerc').text(response.totalFailedPercentage);
                    $('#totalTransactions').text(response.totalTransactions);
                    $('#totalSwitches').text(response.totalSwitches);
                    $('#totalUsers').text(response.totalUsers);
                    updateCharts(response);
                    updateTable(response.recentTransactions)
                    //
                },
                error: function (xhr, status, error) {
                    // This function is called if the request fails (status code outside 200-299)
                    console.error('Error:', error);
                }
            });
        });
    </script>
}

<!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->